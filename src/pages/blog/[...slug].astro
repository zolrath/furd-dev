---
import { getCollection } from "astro:content";
import BaseLayout from "@layouts/BaseLayout.astro";
import TableOfContents from "@components/TableOfContentss.astro";
import Bio from "@components/Bio.astro";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("blog", ({ data }) => {
    // Filter out draft posts in production
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  return posts.map((p) => ({
    params: { slug: p.slug },
    props: { post: p },
  }));
}

const { body, data, slug } = Astro.props.post;
const { Content, headings } = await Astro.props.post.render();
const { title, description, publishDate, tags } = data;
var readTime = readingTime(body).text;

const permalink = `${Astro.site?.href ?? "/"}blog/${slug}`;
---

<BaseLayout
  title={title}
  description={description}
  permalink={permalink}
  current="blog"
>
  <header>
    <p>{publishDate.toLocaleDateString()} ~ {readTime}</p>
    <h1>{title}</h1>
    <hr />
  </header>
  <div class="my-0 mx-auto w-full max-w-2xl">
    <div class="flex">
      <article class="content">
          <Content />
        <div class="text-sm">
          <em>tags:</em>
          {
          tags.map((tag: string) => (
            <>
              <a href={`/blog/tag/${tag}`}>{tag}</a>{" "}
            </>
          ))
          }
        </div>
      </article>
      <TableOfContents headings={headings} />
    </div>
    <hr />
    <Bio />
  </div>
  </div>
</BaseLayout>

<style>
  header {
    text-align: center;
  }

  header h1 {
    margin-bottom: 0.7em;
  }

  header p {
    color: var(--text-secondary);
    text-transform: uppercase;
    font-family: var(--font-family-sans);
    font-weight: 600;
  }

  header hr {
    min-width: 100px;
    width: 30%;
  }
</style>
