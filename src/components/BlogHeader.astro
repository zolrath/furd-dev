---
import { buttonVariants } from "@/components/ui/Button";
import { getCategories, getTags } from "@/fetchers/posts";
import { cn } from "@/utils";

const categories = await getCategories();
const tags = await getTags();

type Props = {
  title: string;
};

const { title } = Astro.props;
const { category, tag } = Astro.params;
---

<h1 class="inline-block text-4xl font-heading">{title}</h1>

<div
  class="flex flex-col justify-start items-end my-6 max-md:gap-4"
>
  {
    !tag && categories?.length ? (
      <div class="flex justify-end space-x-2 w-full lg:space-x-2.5">
        <a
          href={`/blog`}
          class={cn(
            !category ? "select-none" : "",
            "flex-shrink-0",
            buttonVariants({
              variant: !category ? "default" : "outline"
            })
          )}
        >
          All posts
        </a>
        <ul id="categories" class="flex overflow-auto items-start pb-2 space-x-2 lg:space-x-2.5 scrollbar scrollbar-thumb-zinc-700 scrollbar-track-zinc-200 scrollbar-thumb-rounded-md scrollbar-track-rounded-md snap-x snap-mandatory dark:scrollbar-track-zinc-700 dark:scrollbar-thumb-white">
          {categories.map((item) => (
            <li id={item} class="flex-shrink-0 snap-start">
              <a
                href={`/blog/category/${item}`}
                class={cn(
                  "capitalize",
                  item === category ? "select-none" : "",
                  buttonVariants({
                    variant: item === category ? "default" : "outline"
                  })
                )}
              >
                {item}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ) : (
      <div />
    )
  }

  {
    tag && tags?.length ? (
      <div class="flex justify-end space-x-2 w-full lg:space-x-2.5">
        <a
          href={`/blog`}
          class={cn(
            !tag ? "select-none" : "",
          "flex-shrink-0",
            buttonVariants({
              variant: !tag ? "default" : "outline"
            })
          )}
        >
          All posts
        </a>
      <ul id="tags" class="flex overflow-auto items-start pb-2 space-x-2 lg:space-x-2.5 scrollbar scrollbar-thumb-zinc-700 scrollbar-track-zinc-200 scrollbar-thumb-rounded-md scrollbar-track-rounded-md snap-x snap-mandatory dark:scrollbar-track-zinc-700 dark:scrollbar-thumb-white">
          {tags.map((item) => (
            <li id={item} class="flex-shrink-0 snap-start">
              <a
                href={`/blog/tag/${item}`}
                class={cn(
                  "capitalize",
                  item === tag ? "select-none" : "",
                  buttonVariants({
                    variant: item === tag ? "default" : "outline"
                  })
                )}
              >
                {item}
              </a>
            </li>
          ))}
        </ul>
      </div>
    ) : (
      <div />
    )
  }
</div>

<script define:vars={{ tag, category }}>
if (tag) {
  document.getElementById(tag)?.scrollIntoView({ behavior: 'instant', block: 'nearest', inline: 'center' });
}

if (category) {
  document.getElementById(category)?.scrollIntoView({ behavior: 'instant', block: 'nearest', inline: 'center' });
}
</script>

<hr class="mb-7" />
<style>
.masked {
    mask-image: linear-gradient(to left,transparent 0,transparent 51px,#000 77px,#000 100%);
}
</style>
