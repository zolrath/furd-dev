---
import { cn, longDate } from "@/utils";
import type { CollectionEntry } from "astro:content";
import MainLayout from "./MainLayout.astro";
import { buttonVariants } from "@components/ui/Button";
import { Icon } from "astro-icon/components";
import { Badge } from "@components/ui/Badge";
import { Image } from "astro:assets";
import TableOfContents from "@components/TableOfContents.astro";
import DraftIndicator from "@components/ui/DraftIndicator.astro";
import Bio from "@components/Bio.astro";

type Props = CollectionEntry<"blog">;

const slug = Astro.props.slug;
const { draft, title, description, publishDate, updatedDate, coverImage, coverImageAlt, category, tags } =
  Astro.props.data;
const { headings } = await Astro.props.render();

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/**/*.{jpeg,jpg,png,gif,webp}')
if (!images[coverImage]) throw new Error(`"${coverImage}" does not exist in glob: "src/assets/**/*.{jpeg,jpg,png,gif,webp}"`);
---

<MainLayout title={title} description={description}>
  <main class="container relative py-6 max-w-5xl lg:grid lg:gap-10 lg:py-10 xl:gap-20 lg:grid-cols-[1fr_300px]">
    <div>
    <a
      href="/blog"
      class={cn(
        buttonVariants({ variant: "ghost" }),
        "absolute left-[-200px] top-10 hidden 2xl:inline-flex text-muted-foreground"
      )}
      transition:animate="slide"
    >
      <Icon name="lucide:chevron-left" class="mr-2 size-4" />
       See all posts
    </a>

    <article class="mx-auto max-w-none md:max-w-screen-md prose dark:prose-invert">
      <div class="flex gap-2">
        <a href={`/blog/category/${category}`}>
          <Badge
            radius="md"
            className="capitalize"
            transition:name={"category-" + slug}
          >
            {category}
          </Badge>
        </a>
        {tags?.map((tag: string) => (
          <a href={`/blog/tag/${tag}`}>
            <Badge
              radius="md"
              variant="outline"
              className="capitalize"
            >
              {tag}
            </Badge>
          </a>
        ))}
      </div>
      <span class="relative">
        <Image
          class="overflow-hidden my-6 rounded-xl aspect-7/4"
          width={1050}
          height={600}
          src={images[coverImage]()}
          alt={coverImageAlt}
          transition:name={"img-" + slug}
        />
        { draft ? <DraftIndicator slug={slug} className="top-8 left-8" /> : null }
      </span>
      <div class="flex justify-between items-center">
        <span
          class="font-medium text-muted-foreground"
          transition:name={"date-" + slug}
        >
          {longDate(publishDate)}
          {
            updatedDate && (
              <span>- Last updated on {longDate(updatedDate)}</span>
            )
          }
        </span>
      </div>
      <section>
        <h1 id="title" class="my-4 text-4xl font-heading" transition:name={"title-" + slug}>
          {title}
        </h1>
        <p>{description}</p>
      </section>
      <hr class="my-6" />
      <slot />
      <hr class="flex my-4 md:hidden" />
      <div class="flex justify-start py-6 lg:py-10 2xl:hidden">
        <a href="/blog" class={cn(buttonVariants({ variant: "ghost" }))}>
          <Icon name="lucide:chevron-left" class="mr-2 size-4" />
           See all posts
        </a>
      </div>
      <Bio />
    </article>
    </div>
    <div class="hidden text-sm lg:block">
      <div
        class="sticky top-18 -mt-10 max-h-[calc(var(--vh)-4rem)] overflow-y-auto pt-10"
        transition:animate="slide"
      >
        <TableOfContents headings={headings} />
      </div>
    </div>
  </main>
</MainLayout>

<script>
const linkSvg = ` 
<svg 
    xmlns="http://www.w3.org/2000/svg" 
    class="inline-block absolute bottom-0 top-1.5 -left-6 w-6 h-6" 
    aria-hidden="true" 
    focusable="false" 
    viewBox="0 0 24 24" 
    stroke-width="1" stroke="currentColor" 
    fill="none" 
    stroke-linecap="round" 
    stroke-linejoin="round">
        <path d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z">
</svg>
`;

const anchorHeadings = document.querySelectorAll("h2, h3, h4, h5, h6");

	[...anchorHeadings]
		.forEach((heading) => {
			const anchor = document.createElement("a");
			anchor.className = "relative no-underline cursor-pointer group";
			anchor.href = `#${heading.id}`;
			heading.parentNode!.insertBefore(anchor, heading);
			
			const linkIconWrapper = document.createElement("div");
			linkIconWrapper.className = "hidden group-hover:block";

			linkIconWrapper.innerHTML = linkSvg;
			anchor.appendChild(linkIconWrapper);
			anchor.appendChild(heading);
		});
</script>
